"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2990],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),h=i,c=m["".concat(l,".").concat(h)]||m[h]||u[h]||r;return n?a.createElement(c,s(s({ref:t},d),{},{components:n})):a.createElement(c,s({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9648:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:6},s="Method files",o={unversionedId:"user_guide/fitting/method_files",id:"user_guide/fitting/method_files",title:"Method files",description:"Description",source:"@site/docs/user_guide/fitting/method_files.md",sourceDirName:"user_guide/fitting",slug:"/user_guide/fitting/method_files",permalink:"/ChemEx/docs/user_guide/fitting/method_files",draft:!1,editUrl:"https://github.com/gbouvignies/chemex/tree/master/docs/user_guide/fitting/method_files.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Parameter files",permalink:"/ChemEx/docs/user_guide/fitting/parameter_files"},next:{title:"Kinetic models",permalink:"/ChemEx/docs/user_guide/fitting/kinetic_models"}},l={},p=[{value:"Description",id:"description",level:2},{value:"Example",id:"example",level:2},{value:"Setting parameter behavior",id:"setting-parameter-behavior",level:2},{value:"<code>FIT</code>",id:"fit",level:3},{value:"<code>FIX</code>",id:"fix",level:3},{value:"<code>CONSTRAINTS</code>",id:"constraints",level:3},{value:"Selecting a subset of profiles",id:"selecting-a-subset-of-profiles",level:2},{value:"<code>INCLUDE</code>",id:"include",level:3},{value:"<code>EXCLUDE</code>",id:"exclude",level:3},{value:"Running a grid search",id:"running-a-grid-search",level:2},{value:"Evaluating the uncertainty on the fitted parameters",id:"evaluating-the-uncertainty-on-the-fitted-parameters",level:2},{value:"Monte Carlo simulations",id:"monte-carlo-simulations",level:3},{value:"Bootstrap analysis",id:"bootstrap-analysis",level:3},{value:"Nucleus-specific bootstrap analysis",id:"nucleus-specific-bootstrap-analysis",level:3},{value:"Syntax",id:"syntax",level:3}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"method-files"},"Method files"),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,"The method file contains the fitting methods to be used during the fitting\nprocess. This is where you can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"define which parameters are fit, fixed, or constrained,"),(0,i.kt)("li",{parentName:"ul"},"select the profiles to include in the calculation,"),(0,i.kt)("li",{parentName:"ul"},"activate additional calculations, such as grid search, Monte Carlo or\nbootstrap analyses.")),(0,i.kt)("p",null,"This file is provided to ChemEx using the ",(0,i.kt)("inlineCode",{parentName:"p"},"-m")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--method")," option."),(0,i.kt)("p",null,"The method file is structured in sections. Each section corresponds to a fitting\nstep. The section name is the name of the fitting step. The steps are run in the\norder they are defined."),(0,i.kt)("p",null,"If the fitting method contains multiple fitting steps, the value and behavior of\neach parameter always inherit from the previous fitting step if not set in the\ncurrent step. This means that if a parameter is fixed in one step, it remains\nfixed in the following steps as long as its state is not changed."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"The set of residues to be included in global fits should be chosen carefully. A\ncommonly used multi-step fitting strategy is to select a subset of residues with\nrelatively large CPMG dispersion or good quality CEST minor dips to first get\nglobal parameters (p",(0,i.kt)("sub",null,"B"),", k",(0,i.kt)("sub",null,"ex"),"), and then carry out\nsingle-residue fits with (p",(0,i.kt)("sub",null,"B"),", k",(0,i.kt)("sub",null,"ex"),") fixed to get\nresidue-specific parameters (e.g., \u0394\u03d6) in the next step. In CPMG experiments, to\nget reasonable initial estimates of \u0394\u03d6 for each residue, an additional\nsingle-residue fitting step can be carried out at the very beginning, see the\nmethod file for ",(0,i.kt)("inlineCode",{parentName:"p"},"CPMG_CH3_1H_SQ/")," under ",(0,i.kt)("inlineCode",{parentName:"p"},"Examples/Experiments/")," for such an\nexample.")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Here is an example method file demonstrating the different possibilities:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="method.toml"',title:'"method.toml"'},'[STEP1]\nINCLUDE = [15, 31, 33, 34, 37]                                                                                              #, 33, 34, 37]\nGRID    = [\n    "[KEX_AB] = log(100.0, 600.0, 10)",\n    "[PB] = log(0.03, 0.15, 10)",\n    "[DW_AB] = lin(0.0, 10.0, 5)",\n]\n\n[STEP2]\nFIT = ["PB", "KEX_AB", "DW_AB"]\nSTATISTICS = { "MC"=100, "BS"=100, "BSN"=100 }\n\n[STEP3]\nINCLUDE = "ALL"\nFIX     = ["PB", "KEX_AB"]\nGRID    = ["[DW_AB] = lin(0.0, 10.0, 20)"]\n\n[STEP4]\nFIT = ["DW_AB"]\n\n')),(0,i.kt)("p",null,"This fit contains 4 distinct steps:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"A subset of profiles are selected, and a grid search is performed on the\nparameters ",(0,i.kt)("inlineCode",{parentName:"li"},'"KEX_AB"'),", ",(0,i.kt)("inlineCode",{parentName:"li"},'"PB"')," and ",(0,i.kt)("inlineCode",{parentName:"li"},'"DW_AB"'),"."),(0,i.kt)("li",{parentName:"ol"},"The parameters ",(0,i.kt)("inlineCode",{parentName:"li"},'"KEX_AB"'),", ",(0,i.kt)("inlineCode",{parentName:"li"},'"PB"')," and ",(0,i.kt)("inlineCode",{parentName:"li"},'"DW_AB"')," are set to vary. The\nselection of profiles remains the same as in the first step."),(0,i.kt)("li",{parentName:"ol"},"All profiles are included in the fit, the parameters ",(0,i.kt)("inlineCode",{parentName:"li"},'"KEX_AB"')," and ",(0,i.kt)("inlineCode",{parentName:"li"},'"PB"'),"\nare fixed, and a grid search is performed on the parameter ",(0,i.kt)("inlineCode",{parentName:"li"},'"DW_AB"'),"."),(0,i.kt)("li",{parentName:"ol"},"The parameter ",(0,i.kt)("inlineCode",{parentName:"li"},'"DW_AB"')," is set to vary.")),(0,i.kt)("p",null,"Results are written on separate directories named according to the corresponding\nsection name."),(0,i.kt)("h2",{id:"setting-parameter-behavior"},"Setting parameter behavior"),(0,i.kt)("p",null,"All model parameters can either be varied, fixed or constrained. The status of\neach parameter is defined by default at the beginning of the fitting process.\nHowever, you can change this behavior in each fitting step of the method file."),(0,i.kt)("h3",{id:"fit"},(0,i.kt)("inlineCode",{parentName:"h3"},"FIT")),(0,i.kt)("p",null,"Parameters in the ",(0,i.kt)("inlineCode",{parentName:"p"},"FIT")," list are varied during the fitting process. Here,\nparameter names can either designate a unique parameter or a group of\nparameters. For the later, simply mention the attributes identifying the group."),(0,i.kt)("p",null,"For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'FIT = [\n    "R2_A, NUC->G23N, B0->800.13MHz, T->23C",\n    "R1_A, B0->800.13MHz",\n    "DW_AB, NUC->N",\n    "R2_B",\n]\n')),(0,i.kt)("p",null,"In this example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"R2_A, NUC->G23N, B0->800.13MHz, T->23C"')," corresponds to the amide nitrogen\nR",(0,i.kt)("sub",null,"2")," of state A of Gly23 measured at 23 \xbaC, 800.13 MHz."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"R1_A, B0->800.13MHz"')," selects all the state A R",(0,i.kt)("sub",null,"1")," values measured\nat 800.13 MHz, independently of the residue number and temperature."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"DW_AB, NUC->N"')," corresponds to all the amide nitrogen chemical shift\ndifferences between states A and B ."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"R2_B"')," selects all R",(0,i.kt)("sub",null,"2")," values os state B.")),(0,i.kt)("h3",{id:"fix"},(0,i.kt)("inlineCode",{parentName:"h3"},"FIX")),(0,i.kt)("p",null,"Parameters in the ",(0,i.kt)("inlineCode",{parentName:"p"},"FIX")," list are fixed during the fitting process. The format is\nsimilar to the ",(0,i.kt)("inlineCode",{parentName:"p"},"FIT")," list."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'FIX = [\n    "R2_A, NUC->G23N, B0->800.13MHz, T->23C",\n    "R1_A, B0->800.13MHz",\n    "DW_AB, NUC->N",\n    "R2_B",\n]\n')),(0,i.kt)("h3",{id:"constraints"},(0,i.kt)("inlineCode",{parentName:"h3"},"CONSTRAINTS")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSTRAINTS")," list defines the constraints to be applied to the parameters.\nConstraints are mathematical expression of other parameters. The value of the\nconstrained parameter is calculated using this expression."),(0,i.kt)("p",null,"Parameters in the mathematical expression given in the ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSTRAINTS")," list should\nbe put in brackets."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'CONSTRAINTS = [\n    "[R1_B] = 0.5 * [R1_A]",\n    "[R2_B, NUC->N] = [R2_A, NUC->N]",\n]\n')),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Keys are read in that order: ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSTRAINTS")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},"FIX")," -> ",(0,i.kt)("inlineCode",{parentName:"p"},"FIT"),".")),(0,i.kt)("h2",{id:"selecting-a-subset-of-profiles"},"Selecting a subset of profiles"),(0,i.kt)("h3",{id:"include"},(0,i.kt)("inlineCode",{parentName:"h3"},"INCLUDE")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"INCLUDE")," key in method file allows selecting a subset of residues for\nanalysis during each fitting step. The residue name should match the spin-system\nassignment provided in the experiment file(s). You can use the full spin-system\nname (e.g. ",(0,i.kt)("strong",{parentName:"p"},'"G23N-H"'),") or the group name (e.g. ",(0,i.kt)("strong",{parentName:"p"},'"G23"'),") or the residue\nnumber (e.g. ",(0,i.kt)("strong",{parentName:"p"},"23"),"). ",(0,i.kt)("inlineCode",{parentName:"p"},'"ALL"')," (or ",(0,i.kt)("inlineCode",{parentName:"p"},'"*"'),") is the default value, which indicates\nthat all residues are to be included in the current fitting step."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"When only the residue number is used, use a list of integer, that is omit the\nquotes. These two formulations are equivalent:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'INCLUDE = ["G2", "A4", "C5", "H6"]\nINCLUDE = [2, 4, 5, 6]\n'))),(0,i.kt)("h3",{id:"exclude"},(0,i.kt)("inlineCode",{parentName:"h3"},"EXCLUDE")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"EXCLUDE")," key in method file allows excluding a subset of residues from\nanalysis during each fitting step. its usage is similar to the ",(0,i.kt)("inlineCode",{parentName:"p"},"INCLUDE")," key."),(0,i.kt)("h2",{id:"running-a-grid-search"},"Running a grid search"),(0,i.kt)("p",null,"ChemEx has a built-in grid search method that offers the possibility to run an\nnD grid search and plot the resulting \u03c7",(0,i.kt)("sup",null,"2")," values as 1D and 2D plots.\nGrid search can be defined and run using the key ",(0,i.kt)("inlineCode",{parentName:"p"},"GRID")," in any section of the\nmethod file."),(0,i.kt)("p",null,"The grid is defined on a parameters basis. The parameters defining the nD grid\nare fixed to the value of the grid that is evaluated, while the other parameters\nare set as defined by the ",(0,i.kt)("inlineCode",{parentName:"p"},"FIX"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"FIT")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"CONSTRAINTS")," options. Points of the\ngrid can be defined using a linear scale, a log scale or point by point:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Linear scale:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'"[PB] = lin(<min>, <max>, <nb of points>)"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Log scale:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'"[PB] = log(<min>, <max>, <nb of points>)"\n'))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Point by point:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'"[PB] = (<value1>, <value2>, ..., <valuen>)"\n')))),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'GRID = [\n    "[PB] = log(0.03, 0.1, 10)",\n    "[KEX_AB] = log(200.0, 1000.0, 10)",\n    "[DW_AB] = lin(0.0, 10.0, 10)",\n]\n')),(0,i.kt)("p",null,"Parameters are selected as usual. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"[R2_A]")," would select all the\n",(0,i.kt)("strong",{parentName:"p"},"R2_A"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"[R2_A, NUC->G43N]")," would select all the ",(0,i.kt)("strong",{parentName:"p"},"R2_A")," parameters of the\nnucleus ",(0,i.kt)("strong",{parentName:"p"},"G43N")," (multiple values if there are several temperatures, B0 field)."),(0,i.kt)("p",null,"At the end of the grid search the best point is selected and the corresponding\nparameters are used in the next step of the fitting procedure. The \u03c7",(0,i.kt)("sup",null,"2"),"\nvalues are reported in the ",(0,i.kt)("inlineCode",{parentName:"p"},"grid.toml")," file as well as in the form of 1D and 2D\nplots."),(0,i.kt)("p",null,"For an nD grid with n > 1, multiple 1D grids are plotted, one per parameter,\ncorresponding to the parameter values on the x axis and the minimum\n\u03c7",(0,i.kt)("sup",null,"2")," value along the other dimension."),(0,i.kt)("p",null,"Similarly, if n > 2, then a series of 2D \u03c7",(0,i.kt)("sup",null,"2")," surface corresponding to\neach pair of independent parameters is plotted. 2D surface correspond to 2D\nprojection in which the best fit values in the other dimensions are used to\nevaluate each point."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"When two parameters are independent from each others, the corresponding\n\u03c7",(0,i.kt)("sup",null,"2")," surface is entirely flat. It then becomes possible to define\nsub-grids of parameters that are all dependent on each others. The algorithm\nused in ChemEx starts by defining these minimal individual grids and then\nevaluates them separately. The evaluated sub-grids may share common parameters.\nThey are therefore combined together at the end to recover the global minimum\nand to plot 1D \u03c7",(0,i.kt)("sup",null,"2")," curve for each parameter and 2D plots when\npossible."),(0,i.kt)("p",{parentName:"admonition"},"This algorithm is much faster in the sense that a search involving 2 global\nparameters and 8 independent residue specific parameters does not generate a\n10-dimensional grid, but 10 3-dimensional grids, which is much faster and\nimportantly retains all the information.")),(0,i.kt)("h2",{id:"evaluating-the-uncertainty-on-the-fitted-parameters"},"Evaluating the uncertainty on the fitted parameters"),(0,i.kt)("p",null,"The uncertainty on fitted parameters is, in general, estimated through the\ncovariance matrix obtained from the Levenberg-Marquardt optimization. However,\nChemEx offers additional methods to evaluate the parameter uncertainties, that\nis, Monte Carlo simulation, bootstrap analysis and nucleus-specific bootstrap."),(0,i.kt)("h3",{id:"monte-carlo-simulations"},"Monte Carlo simulations"),(0,i.kt)("p",null,"For the Monte Carlo simulation, the fit is run once and Gaussian noise is added\nto the back-calculated values based on the error. Fits are subsequently run on\nthese generated profiles. After N simulations, the distribution of the fitted\nparameters provides an estimate of the uncertainty on the fitted parameters."),(0,i.kt)("h3",{id:"bootstrap-analysis"},"Bootstrap analysis"),(0,i.kt)("p",null,"The bootstrap analysis is similar to the Monte Carlo simulations, except that\nthe synthetic profiles are realized by randomly picking data points from each\nprofile to generate new ones with the same number of points as the original."),(0,i.kt)("h3",{id:"nucleus-specific-bootstrap-analysis"},"Nucleus-specific bootstrap analysis"),(0,i.kt)("p",null,"For the nucleus-specific bootstrap analysis, full profiles are randomly selected\nbased on their associated nucleus to generate the synthetic datasets. In other\nwords, if we have a dataset that depends on the nuclei {G2N, H8N, R9N, R9H},\npotential new datasets could include the profiles of the following sets of\nnuclei {H8N, H8N, R9N, R9H} or {G2N, G2N, G2N, R9H}."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Contrary to standard bootstrap analysis, nucleus-specific bootstrap analysis can\nproduce datasets with different number of data points in them. For examples, if\nprofiles depending on ",(0,i.kt)("strong",{parentName:"p"},"H8N")," appears in multiple experiments and the ones\ndepending on ",(0,i.kt)("strong",{parentName:"p"},"G2N")," in only one, then the two datasets mentioned above would\nhave different number of data points. This goes against the main principle\nunderlying bootstrap analysis that normally requires that all the newly sampled\ndatasets are of the same size.")),(0,i.kt)("h3",{id:"syntax"},"Syntax"),(0,i.kt)("p",null,"These calculations can be run at the end of any fitting step by using the key\n",(0,i.kt)("inlineCode",{parentName:"p"},"STATISTICS"),"."),(0,i.kt)("p",null,"The syntax is the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'    [STEP1]\n    STATISTICS = {"MC"= 100}\n')),(0,i.kt)("p",null,"where MC is the type of simulation and 100 is the number of simulations."),(0,i.kt)("p",null,"Types can be:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'"MC" for Monte Carlo'),(0,i.kt)("li",{parentName:"ul"},'"BS" for bootstrap'),(0,i.kt)("li",{parentName:"ul"},'"BSN" for nucleus-specific bootstrap')),(0,i.kt)("p",null,"To run two or more types of simulation just add additional pairs of values:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[STEP1]\nSTATISTICS = {"MC"= 100, "BS"= 100}\n')),(0,i.kt)("p",null,'The output for each kind of simulation is stored in a single file stored in the\ndirectory corresponding to the step it belongs to. Parameter values are stored\nin different columns. When no values are available, which can be the case for\nnucleus-specific bootstrap analysis, the characters "--" are used to fill the\nspace.'))}u.isMDXComponent=!0}}]);